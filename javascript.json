{
	////////////////////////////////////////////////////////////////////////////
	// React Snippets //////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////
	"[REACT] Scroll to Ref": {
		"prefix": "scrollToRef",
		"body": [
			"const myRef = useRef(null);",
			"const scrollToRef = (ref) => ref.current.scrollIntoView({behavior: 'smooth'});",
			"useEffect(() => scrollToRef(myRef), []);",
			"<div ref={myRef}>This is the content to scroll to...</div>",
			"<button onClick={() => scrollToRef(myRef)}>Scroll button</button>"
		],
		"description": "Scroll to a div reference using useRef hook"
	},
	"[REACT] useState": {
		"prefix": "useState",
		"body": ["const [$1, $2] = useState($3);"],
		"description": "Create a functional state hook"
	},



	////////////////////////////////////////////////////////////////////////////
	// Node Snippets ///////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////
	"[Express] Express Start Server": {
		"prefix": "expressStart",
		"body": [
			"const express = require('express');",
			"const app = express();",
			"",
			"const publicPath = path.join(__dirname, '../public')",
			"app.use(express.static(publicPath))",
			"",
			"app.get('', (req, res) => res.send('hello'));",
			"app.listen(3000, () => console.log(`Server is running on 3000...`));"
		]
	},



	////////////////////////////////////////////////////////////////////////////
	// JavaScript Snippets /////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////
	"[JavaScript] Console log": {
		"prefix": "log",
		"body": "console.log();"
	},
	"[JavaScript] Google Map": {
		"prefix": "gmap",
		"body": [
			"new google.maps.Map(document.getElementById('$1'), {",
			"\tzoom: 1, center: {lat: $2, lng: $3}",
			"})"
		]
	}

}
